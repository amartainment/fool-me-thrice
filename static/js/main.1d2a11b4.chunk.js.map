{"version":3,"sources":["assets/read.svg","assets/read-black.svg","assets/dashboard-black.svg","assets/write-black.svg","actions/api.js","components/LoginPage.js","components/SelectPage.js","components/ReadPage.js","components/DashboardPage.js","components/WritePage.js","App.js","serviceWorker.js","index.js","assets/dashboard.svg","assets/write.svg"],"names":["module","exports","__webpack_require__","p","proxyurl","getKeywords","token","sessionStorage","getItem","axios","method","mode","url","cache","headers","Authorization","concat","Access-Control-Allow-Origin","then","response","data","updateScore","LoginPageComponent","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleUsernameChange","email","setState","objectSpread","state","handlePasswordChange","password","handleSignUp","credentials","res","message","toast","success","position","POSITION","BOTTOM_RIGHT","handleSubmit","errors","error","_this2","setItem","auth_token","catch","err","status","topics","length","props","history","push","_this3","react_default","a","createElement","className","onChange","e","target","value","type","placeholder","onClick","react_toastify","React","Component","withRouter","SelectPageComponent","chips","chipset","fetchTopics","updateTopics","topic_ids","filter","x","indexOf","name","map","id","lib_default","suggestions","ReadPageComponent","handleKeyPress","event","keyCode","cardRef","removeCard","handleSwipe","currentCard","currentIndex","isSwiped","cards","getCards","endcard","description","upvotes","document","addEventListener","removeEventListener","dir","card","temp","fake","card_id","answer","splice","correctAnimationOptions","loop","autoplay","animationData","correctAnimation","rendererSettings","preserveAspectRatio","incorrectAnimationOptions","incorrectAnimation","react_swipe_card_default","ref","instance","index","react_swipe_card","key","onSwipeLeft","onSwipeRight","width","height","src","ReadBlackLogo","alt","navigateToDashboard","DashboardLogo","navigateToWrite","WriteLogo","dist_default","options","DashboardPageComponent","dummy","top_cards","top_performers","getStats","slice","item","user","sum","renderTopCards","renderTopPerformers","navigateToRead","ReadLogo","DashboardBlackLogo","WritePageComponent","handleButtonClick","word","selectedWords","renderSentenceConstruct","handleRemoveWord","handleInputChange","input","defineProperty","resetStates","showConfirmModal","showSuccessModal","row0","row1","row2","topic_id","topic","subjects","verbs","victims","createFakeCard","forEach","join","currentSentence","request","createCard","words","s","_this4","renderKeywords","WriteBlackLogo","Modal","animation","show","onHide","Header","Title","Body","Footer","Button","App","react_router_dom","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d2a11b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/read.fbf7eb0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/read-black.4f276d09.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard-black.ce453b16.svg\";","module.exports = __webpack_public_path__ + \"static/media/write-black.82ca0e34.svg\";","import axios from 'axios';\r\n\r\n\r\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n\r\nfunction authenticate(credentials) {\r\n    let req = axios({\r\n        method: 'POST',\r\n        data: credentials,\r\n        url: proxyurl + 'https://fool-me-thrice.appspot.com/api/authenticate',\r\n        cache: false,\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*'\r\n          }\r\n    }).then(response => {\r\n        sessionStorage.setItem('token', response.data.auth_token);\r\n        return response;\r\n    }).catch(err => {\r\n        return {status: 401, error: 'Invalid Credentials'};\r\n    })\r\n    return req;\r\n}\r\n\r\nfunction createUser(credentials) {\r\n    let req = axios({\r\n        method: 'POST',\r\n        data: credentials,\r\n        url: proxyurl + 'https://fool-me-thrice.appspot.com/api/create_user',\r\n        cache: false,\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*'\r\n          }\r\n    }).then(response => {\r\n        return response.data;\r\n    })\r\n\r\n    return req;\r\n}\r\n\r\nfunction getKeywords() {\r\n    let token = sessionStorage.getItem('token');\r\n\r\n    let req = axios({\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        url: proxyurl + 'https://fool-me-thrice.appspot.com/api/v1/get_keywords',\r\n        cache: false,\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Access-Control-Allow-Origin': '*'\r\n          }\r\n    }).then(response => {\r\n        return response.data;\r\n    })\r\n\r\n    return req;\r\n}\r\n\r\nfunction fetchTopics() {\r\n\r\n    let token = sessionStorage.getItem('token');\r\n\r\n    let req = axios({\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        url: proxyurl + 'https://fool-me-thrice.appspot.com/api/v1/topics',\r\n        cache: false,\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Access-Control-Allow-Origin': '*'\r\n          }\r\n    }).then(response => {\r\n        return response.data;\r\n    })\r\n\r\n    return req;\r\n}\r\n\r\nfunction getCards() {\r\n    let token = sessionStorage.getItem('token');\r\n\r\n    let req = axios({\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        url: proxyurl + 'https://fool-me-thrice.appspot.com/api/v1/cards',\r\n        cache: false,\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Access-Control-Allow-Origin': '*'\r\n          }\r\n    }).then(response => {\r\n        return response.data;\r\n    })\r\n\r\n    return req;\r\n}\r\n\r\nfunction updateScore(data) {\r\n    let token = sessionStorage.getItem('token');\r\n\r\n    let req = axios({\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        data: data,\r\n        url: proxyurl + 'https://fool-me-thrice.appspot.com/api/v1/update_score',\r\n        cache: false,\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Access-Control-Allow-Origin': '*'\r\n          }\r\n    }).then(response => {\r\n        return response.data;\r\n    })\r\n\r\n    return req;\r\n}\r\n\r\nfunction createCard(request) {\r\n  \r\n    let token = sessionStorage.getItem('token');\r\n\r\n    let req = axios({\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        data: request,\r\n        url: proxyurl + 'https://fool-me-thrice.appspot.com/api/v1/create_card',\r\n        cache: false,\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Access-Control-Allow-Origin': '*'\r\n          }\r\n    }).then(response => {\r\n        return response;\r\n    })\r\n\r\n    return req;  \r\n}\r\n\r\nfunction getStats() {\r\n  \r\n    let token = sessionStorage.getItem('token');\r\n\r\n    let req = axios({\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        url: proxyurl + 'https://fool-me-thrice.appspot.com/api/v1/statistics',\r\n        cache: false,\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Access-Control-Allow-Origin': '*'\r\n          }\r\n    }).then(response => {\r\n        return response.data;\r\n    })\r\n\r\n    return req;  \r\n}\r\n\r\nfunction updateTopics(topics) {\r\n\r\n    let token = sessionStorage.getItem('token');\r\n\r\n    let req = axios({\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        data: topics,\r\n        url: proxyurl + 'https://fool-me-thrice.appspot.com/api/v1/update_user_topic',\r\n        cache: false,\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Access-Control-Allow-Origin': '*'\r\n          }\r\n    }).then(response => {\r\n        return response;\r\n    })\r\n\r\n    return req;\r\n}\r\n\r\nexport {\r\n        authenticate, \r\n        fetchTopics, \r\n        updateTopics, \r\n        getCards, \r\n        createCard,\r\n        getStats,\r\n        createUser,\r\n        updateScore, \r\n        getKeywords};","import React from 'react';\r\nimport {authenticate, createUser} from '../actions/api.js';\r\nimport {withRouter} from 'react-router';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport '../App.css';\r\nimport '../alertify.css';\r\nclass LoginPageComponent extends React.Component {\r\n  constructor() {\r\n      super();\r\n      this.state = {\r\n          email: '',\r\n          password: ''\r\n      };\r\n  }\r\n\r\n  handleUsernameChange = (email) => {\r\n      this.setState({...this.state, email: email});\r\n  }\r\n\r\n  handlePasswordChange = (password) => {\r\n      this.setState({...this.state, password: password});\r\n  }\r\n\r\n  handleSubmit() {\r\n    authenticate(this.state)\r\n        .then(res => {\r\n          if (res.status === 200) {\r\n            if (res.data.topics.length) {\r\n              this.props.history.push('/read');\r\n            } else {\r\n              this.props.history.push('/select');\r\n            }\r\n          } else {\r\n            toast.error(res.error, {\r\n              position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n          }\r\n        })\r\n  }\r\n\r\n  handleSignUp = () => {\r\n    createUser(this.state)\r\n        .then(res => {\r\n          if (res && res.message) {\r\n            toast.success(res.message + ' Logging you in...', {\r\n              position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n            this.handleSubmit(this.state);\r\n          } else if (res.errors) {\r\n            toast.error(res.errors, {\r\n              position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n          }\r\n\r\n        });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"login-card\">\r\n            <div className=\"login-card-content\">\r\n                <h1 className=\"app-name\">Fool Me Thrice</h1>\r\n                <div className=\"login-form\">\r\n                    <input className=\"form-control\" onChange={(e) => this.handleUsernameChange(e.target.value)} type=\"text\" placeholder=\"someone@example.com\"></input>\r\n                    <input className=\"form-control\" onChange={(e) => this.handlePasswordChange(e.target.value)} type=\"password\" placeholder=\"password123\"></input>\r\n                </div>\r\n                <div className=\"mt-2 mb-2 ml-auto mr-auto\">\r\n                    <button onClick={() => this.handleSubmit()} className=\"login-button button btn-primary\">Login</button>\r\n                </div>\r\n                <div className=\"mt-2 mb-2 ml-auto mr-auto\">\r\n                    <button onClick={() => this.handleSignUp()} className=\"signup-button button btn-primary\">Sign Up</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <ToastContainer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default (withRouter)(LoginPageComponent);","import React from 'react';\r\nimport {withRouter} from 'react-router';\r\nimport Chips from 'react-chips';\r\n\r\nimport { fetchTopics, updateTopics } from '../actions/api';\r\n\r\nclass SelectPageComponent extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        if(!(sessionStorage.getItem('token'))) {\r\n            this.props.history.push('/');\r\n        }\r\n\r\n        this.state = {\r\n            chips: [],\r\n            chipset: [],\r\n\r\n        };\r\n\r\n        // Call Fetch Topics\r\n        fetchTopics()\r\n            .then(response => this.setState({ ...this.state, chipset: response }));\r\n    }\r\n\r\n    onChange = chips => {\r\n        this.setState({ chips });\r\n    }\r\n\r\n    handleSubmit() {\r\n        let selection = [];\r\n        selection = this.state.chipset.filter(x => this.state.chips.indexOf(x.name) > -1);\r\n        updateTopics({topic_ids: selection.map(x => x.id)})\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    this.props.history.push('/read');\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"login-card\">\r\n                    <div className=\"login-card-content\">\r\n                        <h1 className=\"app-name\">The Daily Fool</h1>\r\n                        <div className=\"login-form\">\r\n                            <h5 className=\"mb-5 select-interests\">Select your Interests</h5>\r\n                            <Chips\r\n                                value={this.state.chips}\r\n                                onChange={this.onChange}\r\n                                suggestions={this.state.chipset.map(x => x.name)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mt-4 mb-4 ml-auto mr-auto\">\r\n                            <button onClick={() => this.handleSubmit()} className=\"login-button button btn-primary\">Continue</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default (withRouter)(SelectPageComponent);","import React from 'react';\r\nimport Cards, { Card } from 'react-swipe-card';\r\nimport Lottie from 'react-lottie';\r\nimport correctAnimation from '../assets/lottie-files/433-checked-done.json';\r\nimport incorrectAnimation from '../assets/lottie-files/4386-connection-error.json';\r\n\r\nimport { getCards, updateScore } from '../actions/api';\r\nimport { withRouter } from 'react-router';\r\n\r\n// Logos\r\nimport DashboardLogo from '../assets/dashboard.svg';\r\nimport ReadBlackLogo from '../assets/read-black.svg';\r\nimport WriteLogo from '../assets/write.svg';\r\n\r\nimport '../App.css';\r\n\r\nclass ReadPageComponent extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.cardRef = null;\r\n\r\n    if (!(sessionStorage.getItem('token'))) {\r\n      this.props.history.push('/');\r\n    }\r\n\r\n    this.state = {\r\n      isSwiped: false,\r\n      cards: [],\r\n      currentCard: {},\r\n      currentIndex: 0\r\n    }\r\n\r\n    getCards()\r\n      .then(response => {\r\n        if (response.length === 0) {\r\n          let endcard =\r\n            [{\r\n              id: -3,\r\n              description: 'Come back again to check new cards!',\r\n              upvotes: ''\r\n            }];\r\n          this.setState({ ...this.state, cards: endcard, currentCard: endcard });\r\n        } else {\r\n          this.setState({ ...this.state, cards: response, currentCard: response[0]})\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keyup\", this.handleKeyPress, false);\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keyup\", this.handleKeyPress, false);\r\n  }\r\n\r\n  // Navigate to Write\r\n  navigateToWrite() {\r\n    this.props.history.push('/write');\r\n  }\r\n\r\n  // Navigate to Dashboard\r\n  navigateToDashboard() {\r\n    this.props.history.push('/dashboard');\r\n  }\r\n\r\n  // Handle the keyboard actions, left & right\r\n  handleKeyPress = (event) => {\r\n    if (event.keyCode === 37 || event.keyCode === 65) {\r\n      this.cardRef.removeCard('Left', 0);\r\n      this.handleSwipe(false, this.state.currentCard, this.state.currentIndex);\r\n    } else if (event.keyCode === 39 || event.keyCode === 68) {\r\n      this.cardRef.removeCard('Right', 0);\r\n      this.handleSwipe(true, this.state.currentCard, this.state.currentIndex);\r\n    }\r\n  }\r\n\r\n  // Handle the swipe action\r\n  handleSwipe(dir, card, position) {\r\n\r\n    let temp = this.state.cards;\r\n\r\n    if (dir === 'end') {\r\n      let endcard =\r\n      {\r\n        id: -3,\r\n        description: 'Come back again to check new cards!',\r\n        upvotes: ''\r\n      };\r\n      this.setState({ ...this.state, cards: this.state.cards.push(endcard) });\r\n    } else if ((card.id > 0) && (dir === card.fake)) {\r\n      let error_card = {\r\n        id: -2,\r\n        description: 'You got fooled by the propaganda machine!',\r\n        upvotes: '',\r\n      };\r\n\r\n      let body = {\r\n        card_id: card.id,\r\n        answer: dir\r\n      }\r\n\r\n      updateScore(body)\r\n        .then(response => response);\r\n\r\n      temp.splice(position + 1, 0, error_card);\r\n\r\n    } else if ((card.id > 0) && (dir !== card.fake)) {\r\n      let positive_card = {\r\n        id: -3,\r\n        description: \"You're right! What a player!\",\r\n        upvotes: ''\r\n      };\r\n\r\n      temp.splice(position + 1, 0, positive_card);\r\n\r\n      let body = {\r\n        card_id: card.id,\r\n        answer: dir\r\n      }\r\n\r\n      updateScore(body)\r\n        .then(response => response);\r\n    }\r\n\r\n    this.setState(\r\n      { ...this.state,\r\n        currentCard: temp[position + 1],\r\n        currentIndex: position + 1, \r\n        cards: temp \r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const correctAnimationOptions = {\r\n      loop: false,\r\n      autoplay: true, \r\n      animationData: correctAnimation,\r\n      rendererSettings: {\r\n        preserveAspectRatio: 'xMidYMid slice'\r\n      }\r\n    };\r\n\r\n    const incorrectAnimationOptions = {\r\n      loop: false,\r\n      autoplay: true, \r\n      animationData: incorrectAnimation,\r\n      rendererSettings: {\r\n        preserveAspectRatio: 'xMidYMid slice'\r\n      }     \r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.isSwiped === false &&\r\n          <Cards \r\n            ref={instance => this.cardRef = instance}\r\n            className='master-root'>\r\n            {this.state.cards.map((x, index) =>\r\n                <Card\r\n                  key={x.id}\r\n                  onSwipeLeft={(e) => this.handleSwipe(false, x, index)}\r\n                  onSwipeRight={(e) => this.handleSwipe(true, x, index)}\r\n                >\r\n                  {x.id > 0 &&\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header\">\r\n                        <div className=\"points\">\r\n                          <i className=\"material-icons\">favorite</i>\r\n                          <div className=\"points-text\">{x.upvotes}</div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <p className=\"content-styles\">{x.description}</p>\r\n                        <div className=\"share-row\">\r\n                          <i className=\"material-icons share-icon\">share</i>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"my-card-footer\">\r\n                        <div className=\"app-icons-row\">\r\n                          <div className=\"col-4\">\r\n                            <img width=\"40\" height=\"40\" src={ReadBlackLogo} alt=\"Read Logo\" />\r\n                          </div>\r\n                          <div onClick={(e) => this.navigateToDashboard()} className=\"col-4\">\r\n                            <img width=\"40\" height=\"40\" src={DashboardLogo} alt=\"Dashboard Logo\" />\r\n                          </div>\r\n                          <div onClick={(e) => this.navigateToWrite()} className=\"col-4\">\r\n                            <img width=\"40\" height=\"40\" src={WriteLogo} alt=\"Write Logo\" />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  }\r\n                  {x.id === -3 &&                     \r\n                    <div>\r\n                      <div className=\"card-header\"></div>\r\n                      <div className=\"card-body-anim\">\r\n                        <Lottie options={correctAnimationOptions}\r\n                          height={300}\r\n                          width={300}\r\n                        /> \r\n                        <p className=\"content-styles-anim\">{x.description}</p>\r\n                      </div>\r\n                      <div className=\"my-card-footer\">\r\n                        <div className=\"app-icons-row\">\r\n                          <div className=\"col-4\">\r\n                            <img width=\"40\" height=\"40\" src={ReadBlackLogo} alt=\"Read Logo\" />\r\n                          </div>\r\n                          <div onClick={(e) => this.navigateToDashboard()} className=\"col-4\">\r\n                            <img width=\"40\" height=\"40\" src={DashboardLogo} alt=\"Dashboard Logo\" />\r\n                          </div>\r\n                          <div onClick={(e) => this.navigateToWrite()} className=\"col-4\">\r\n                            <img width=\"40\" height=\"40\" src={WriteLogo} alt=\"Write Logo\" />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  }\r\n                  {x.id === -2 &&                     \r\n                    <div>\r\n                      <div className=\"card-header\"></div>\r\n                      <div className=\"card-body-anim\">\r\n                        <Lottie \r\n                          options={incorrectAnimationOptions}\r\n                          height={300}\r\n                          width={300}\r\n                        /> \r\n                        <p className=\"content-styles-anim\">{x.description}</p>\r\n                      </div>\r\n                      <div className=\"my-card-footer\">\r\n                        <div className=\"app-icons-row\">\r\n                          <div className=\"col-4\">\r\n                            <img width=\"40\" height=\"40\" src={ReadBlackLogo} alt=\"Read Logo\" />\r\n                          </div>\r\n                          <div className=\"col-4\">\r\n                            <img width=\"40\" height=\"40\" src={DashboardLogo} alt=\"Dashboard Logo\" />\r\n                          </div>\r\n                          <div onClick={(e) => this.navigateToWrite()} className=\"col-4\">\r\n                            <img width=\"40\" height=\"40\" src={WriteLogo} alt=\"Write Logo\" />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  }\r\n                </Card>\r\n            )}\r\n          </Cards>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default (withRouter)(ReadPageComponent);","import React from 'react';\r\nimport Cards, { Card } from 'react-swipe-card'\r\n\r\nimport { getStats } from '../actions/api';\r\nimport { withRouter } from 'react-router';\r\n\r\n// Logos\r\nimport DashboardBlackLogo from '../assets/dashboard-black.svg';\r\nimport ReadLogo from '../assets/read.svg';\r\nimport WriteLogo from '../assets/write.svg';\r\n\r\nimport '../App.css';\r\n\r\nclass DashboardPageComponent extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      dummy: [1],\r\n      top_cards: [],\r\n      top_performers: []\r\n    }\r\n\r\n    if (!(sessionStorage.getItem('token'))) {\r\n      this.props.history.push('/');\r\n    }\r\n\r\n    getStats()\r\n      .then(response => {\r\n        this.setState({\r\n          ...this.state,\r\n          top_cards: response.top_cards.slice(0, 3),\r\n          top_performers: response.top_performers.slice(0, 3)\r\n        })\r\n      })\r\n\r\n  }\r\n\r\n  // Navigate to Read\r\n  navigateToRead() {\r\n    this.props.history.push('/read');\r\n  }\r\n\r\n  // Navigate to Read\r\n  navigateToWrite() {\r\n      this.props.history.push('/write');\r\n  }\r\n\r\n  renderTopCards() {\r\n    return this.state.top_cards.map((item, index) => {\r\n      return (\r\n          <div key={index} className=\"row m-0 p-1\">\r\n            <div className=\"col-2 number-col-db\">{item.upvotes}</div>\r\n            <div className=\"col-10 text-col-db\">{item.description}</div>\r\n          </div>\r\n        )\r\n    })\r\n  }\r\n\r\n  renderTopPerformers() {\r\n    return this.state.top_performers.map((user, index) => {\r\n      return (\r\n          <div key={index} className=\"row m-0 p-1\">\r\n            <div className=\"col-2 number-col-db\">{user.sum}</div>\r\n            <div className=\"col-10 text-col-db\">{user.email}</div>\r\n          </div>\r\n        )\r\n    })   \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Cards className='master-root'>\r\n          {this.state.dummy.map(x =>\r\n            <Card\r\n              key={x}\r\n            >\r\n              <div className=\"dashboard-card-wrapper\">\r\n                <h5 className=\"card-header\">Statistics</h5>\r\n                <div className=\"card-body-dashboard p-2\">\r\n                  <div className=\"row m-0 p-1 row-header-db\">\r\n                    Top Cards\r\n                  </div>\r\n                  {this.renderTopCards()}\r\n                  <hr></hr>\r\n                  <div className=\"row m-0 p-1 row-header-db\">\r\n                    Top Performers\r\n                  </div>\r\n                  {this.renderTopPerformers()}\r\n                </div>\r\n                <div className=\"my-card-footer\">\r\n                  <div className=\"app-icons-row\">\r\n                    <div onClick={(e) => this.navigateToRead()} className=\"col-4\">\r\n                      <img width=\"40\" height=\"40\" src={ReadLogo} alt=\"Read Logo\" />\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                      <img width=\"40\" height=\"40\" src={DashboardBlackLogo} alt=\"Dashboard Logo\" />\r\n                    </div>\r\n                    <div onClick={(e) => this.navigateToWrite()} className=\"col-4\">\r\n                      <img width=\"40\" height=\"40\" src={WriteLogo} alt=\"Write Logo\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          )}\r\n        </Cards>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default (withRouter)(DashboardPageComponent);","import React from 'react';\r\nimport Cards, { Card } from 'react-swipe-card';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nimport { getKeywords, createCard } from '../actions/api';\r\nimport { withRouter } from 'react-router';\r\n\r\n// Logos\r\nimport DashboardLogo from '../assets/dashboard.svg';\r\nimport ReadLogo from '../assets/read.svg';\r\nimport WriteBlackLogo from '../assets/write-black.svg';\r\n\r\nimport '../App.css';\r\n\r\n\r\nclass WritePageComponent extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      dummy: [1],\r\n      subjects: [],\r\n      verbs: [],\r\n      victims: [],\r\n      selectedWords: [],\r\n      row0: ['', '', ''],\r\n      row1: ['', '', ''],\r\n      row2: ['', '', ''],\r\n      showConfirmModal: false,\r\n      showSuccessModal: false\r\n    }\r\n\r\n    if (!(sessionStorage.getItem('token'))) {\r\n      this.props.history.push('/');\r\n    }\r\n\r\n    getKeywords()\r\n      .then(res => {\r\n        this.setState({\r\n          ...this.state,\r\n          topic_id: res.topic.id,\r\n          subjects: res.subjects.map(x => x.name),\r\n          verbs: res.verbs.map(x => x.name),\r\n          victims: res.victims.map(x => x.name)\r\n        })\r\n      });\r\n  }\r\n\r\n  // Navigate to Read\r\n  navigateToRead() {\r\n    this.props.history.push('/read');\r\n  }\r\n\r\n  // Navigate to Dashboard\r\n  navigateToDashboard() {\r\n    this.props.history.push('/dashboard');\r\n  }\r\n\r\n  handleButtonClick = (word) => {\r\n    let x = this.state.selectedWords;\r\n    if (x.length < 3) {\r\n      x.push(word);\r\n      this.setState({ ...this.state, selectedWords: x });\r\n    }\r\n    this.renderSentenceConstruct();\r\n  }\r\n\r\n  handleRemoveWord = (word) => {\r\n    let x = this.state.selectedWords;\r\n    x = x.filter(item => item !== word)\r\n    this.setState({ ...this.state, selectedWords: x });\r\n    this.renderSentenceConstruct();\r\n  }\r\n\r\n  handleInputChange = (index, position, input) => {\r\n\r\n    let x = this.state[`row${index}`];\r\n    x[position] = input;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      [`row${index}`]: x\r\n    })\r\n  }\r\n\r\n  resetStates = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      showConfirmModal: false,\r\n      showSuccessModal: false,\r\n      selectedWords: [],\r\n      row0: ['', '', ''],\r\n      row1: ['', '', ''],\r\n      row2: ['', '', '']\r\n    })\r\n\r\n    // Get new words from the API\r\n    getKeywords()\r\n    .then(res => {\r\n      this.setState({\r\n        ...this.state,\r\n        topic_id: res.topic.id,\r\n        subjects: res.subjects.map(x => x.name),\r\n        verbs: res.verbs.map(x => x.name),\r\n        victims: res.victims.map(x => x.name)\r\n      })\r\n    });\r\n  }\r\n\r\n  createFakeCard = () => {\r\n\r\n    // Get all selected words and interpolate them\r\n    this.state.selectedWords.forEach((word, index) => {\r\n      let x = this.state[`row${index}`];\r\n      x[1] = word;\r\n      this.setState({\r\n        ...this.state,\r\n        [`row${index}`]: x\r\n      })\r\n    });\r\n\r\n    // Concatenate all words and build the string\r\n    let x = this.state.row0.concat(this.state.row1, this.state.row2);\r\n    x = x.join(' ');\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      currentSentence: x,\r\n      showConfirmModal: true\r\n    });\r\n  }\r\n\r\n  handleSubmit = () => {\r\n\r\n    this.showConfirmModal = false;\r\n\r\n    let body = {\r\n      topic_id: this.state.topic_id,\r\n      description: this.state.currentSentence,\r\n      fake: true\r\n    }\r\n\r\n    createCard(body)\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          this.setState({\r\n            ...this.state,\r\n            showSuccessModal: true\r\n          })\r\n        }\r\n      });\r\n  }\r\n\r\n  renderSentenceConstruct() {\r\n    return (\r\n      this.state.selectedWords.map((word, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <div className=\"row inputs-row\">\r\n              <input value={this.state[`row${index}[0]`]} onChange={(e) => this.handleInputChange(index, 0, e.target.value)} className=\"form-control write-form-control\" type=\"text\"></input>\r\n              <button onClick={() => this.handleRemoveWord(word)} className=\"btn btn-dark selector-button\">{word}</button>\r\n              <input value={this.state[`row${index}[2]`]} onChange={(e) => this.handleInputChange(index, 2, e.target.value)} className=\"form-control write-form-control\" type=\"text\"></input>\r\n            </div>\r\n            {index > 1 &&\r\n              <div className=\"row create-btn-row m-0\">\r\n                <button onClick={() => this.createFakeCard()} className=\"btn create-btn btn-success\">Create</button>\r\n              </div>}\r\n          </div>\r\n        )\r\n      })\r\n    )\r\n  }\r\n\r\n  renderKeywords() {\r\n    let words = [];\r\n    words = words.concat(this.state.subjects, this.state.verbs, this.state.victims);\r\n    return (\r\n      words.map((s, index) => <div key={index} className=\"col-6 selector-btn-col\"><button type=\"button\" className=\"btn btn-dark selector-button\" onClick={() => this.handleButtonClick(s)}>{s}</button></div>)\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Cards className='master-root'>\r\n          {this.state.dummy.map(x =>\r\n            <Card\r\n              key={x}\r\n            >\r\n              <div className=\"write-card-wrapper\">\r\n                <h5 className=\"card-header\">Construct your card</h5>\r\n                <div className=\"card-body-write\">\r\n                  <div className=\"sentence-construct-container\">\r\n                    {this.renderSentenceConstruct()}\r\n                  </div>\r\n                  <div className=\"keyword-select-container\">\r\n                    <div className=\"row\">\r\n                      <div onClick={() => this.resetStates()} className=\"col-1 ml-1\">\r\n                        <i className=\"material-icons refresh-icon\">refresh</i>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      {this.renderKeywords()}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"my-card-footer\">\r\n                  <div className=\"app-icons-row\">\r\n                    <div onClick={(e) => this.navigateToRead()} className=\"col-4\">\r\n                      <img width=\"40\" height=\"40\" src={ReadLogo} alt=\"Read Logo\" />\r\n                    </div>\r\n                    <div onClick={(e) => this.navigateToDashboard()} className=\"col-4\">\r\n                      <img width=\"40\" height=\"40\" src={DashboardLogo} alt=\"Dashboard Logo\" />\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                      <img width=\"40\" height=\"40\" src={WriteBlackLogo} alt=\"Write Logo\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          )}\r\n        </Cards>\r\n        <Modal animation={false} show={this.state.showConfirmModal} onHide={() => this.setState({...this.state, showConfirmModal: false})}>\r\n          <Modal.Header>\r\n            <Modal.Title>Confirm your card</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {this.state.currentSentence}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={() => this.setState({...this.state, showConfirmModal: false})}>Cancel</Button>\r\n            <Button onClick={() => this.handleSubmit()}>Create Card</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal animation={false} show={this.state.showSuccessModal} onHide={() => this.setState({...this.state, showSuccessModal: false})}>\r\n          <Modal.Header>\r\n            <Modal.Title>New card created</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {this.state.currentSentence}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={() => this.resetStates()}>Okay</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default (withRouter)(WritePageComponent);","import React from 'react';\r\n\r\nimport {\r\n  HashRouter as Router,\r\n  Route\r\n} from 'react-router-dom'\r\n\r\nimport './App.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport LoginPageComponent from './components/LoginPage';\r\nimport SelectPageComponent from './components/SelectPage';\r\nimport ReadPageComponent from './components/ReadPage';\r\nimport DashboardPageComponent from './components/DashboardPage';\r\nimport WritePageComponent from './components/WritePage';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div id=\"root\">\r\n          <Route exact path=\"/\" component={LoginPageComponent} />\r\n          <Route path=\"/read\" exact component={ReadPageComponent} />\r\n          <Route path=\"/write\" exact component={WritePageComponent} />\r\n          <Route path=\"/dashboard\" exact component={DashboardPageComponent} />\r\n          <Route path=\"/select\" exact component={SelectPageComponent} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/dashboard.82dc68ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/write.4ef89b7c.svg\";"],"sourceRoot":""}