{"version":3,"sources":["assets/read-black.svg","assets/dashboard-black.svg","assets/write-black.svg","actions/api.js","components/LoginPage.js","components/SelectPage.js","components/ReadPage.js","components/DashboardPage.js","components/WritePage.js","App.js","serviceWorker.js","index.js","assets/dashboard.svg","assets/write.svg","assets/read.svg"],"names":["module","exports","__webpack_require__","p","proxyurl","updateScore","data","token","sessionStorage","getItem","axios","method","mode","url","cache","headers","Authorization","concat","Access-Control-Allow-Origin","then","response","LoginPageComponent","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleUsernameChange","email","setState","objectSpread","state","handlePasswordChange","password","handleSignUp","credentials","res","message","window","location","reload","_this2","setItem","auth_token","topics","length","props","history","push","_this3","react_default","a","createElement","className","onChange","e","target","value","type","placeholder","onClick","handleSubmit","React","Component","withRouter","SelectPageComponent","chips","chipset","fetchTopics","updateTopics","topic_ids","filter","x","indexOf","name","map","id","status","lib_default","suggestions","ReadPageComponent","isSwiped","cards","getCards","description","upvotes","dir","card","position","fake","card_id","answer","temp","splice","correctAnimationOptions","loop","autoplay","animationData","correctAnimation","rendererSettings","preserveAspectRatio","incorrectAnimationOptions","incorrectAnimation","react_swipe_card_default","index","react_swipe_card","key","onSwipeLeft","handleSwipe","onSwipeRight","width","height","src","ReadBlackLogo","alt","navigateToDashboard","DashboardLogo","navigateToWrite","WriteLogo","dist_default","options","DashboardPageComponent","dummy","top_cards","top_performers","getStats","slice","item","user","sum","renderTopCards","renderTopPerformers","navigateToRead","ReadLogo","DashboardBlackLogo","WritePageComponent","handleButtonClick","word","selectedWords","renderSentenceConstruct","handleRemoveWord","handleInputChange","input","defineProperty","resetStates","row0","row1","row2","createFakeCard","forEach","join","request","createCard","topic_id","subjects","verbs","victims","getKeywords","topic","words","s","_this4","renderKeywords","WriteBlackLogo","App","react_router_dom","react_router","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c5f7bb1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/read-black.4f276d09.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard-black.ce453b16.svg\";","module.exports = __webpack_public_path__ + \"static/media/write-black.82ca0e34.svg\";","import axios from 'axios';\r\n\r\n\r\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n\r\nfunction authenticate(credentials) {\r\n    let req = axios({\r\n        method: 'POST',\r\n        data: credentials,\r\n        url: proxyurl + 'https://fool-me-thrice.appspot.com/api/authenticate',\r\n        cache: false,\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*'\r\n          }\r\n    }).then(response => {\r\n        sessionStorage.setItem('token', response.data.auth_token);\r\n        return response;\r\n    })\r\n\r\n    return req;\r\n}\r\n\r\nfunction createUser(credentials) {\r\n    let req = axios({\r\n        method: 'POST',\r\n        data: credentials,\r\n        url: proxyurl + 'https://fool-me-thrice.appspot.com/api/create_user',\r\n        cache: false,\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*'\r\n          }\r\n    }).then(response => {\r\n        return response;\r\n    })\r\n\r\n    return req;\r\n}\r\n\r\nfunction getKeywords() {\r\n    let token = sessionStorage.getItem('token');\r\n\r\n    let req = axios({\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        url: proxyurl + 'https://fool-me-thrice.appspot.com/api/v1/get_keywords',\r\n        cache: false,\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Access-Control-Allow-Origin': '*'\r\n          }\r\n    }).then(response => {\r\n        return response.data;\r\n    })\r\n\r\n    return req;\r\n}\r\n\r\nfunction fetchTopics() {\r\n\r\n    let token = sessionStorage.getItem('token');\r\n\r\n    let req = axios({\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        url: proxyurl + 'https://fool-me-thrice.appspot.com/api/v1/topics',\r\n        cache: false,\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Access-Control-Allow-Origin': '*'\r\n          }\r\n    }).then(response => {\r\n        return response.data;\r\n    })\r\n\r\n    return req;\r\n}\r\n\r\nfunction getCards() {\r\n    let token = sessionStorage.getItem('token');\r\n\r\n    let req = axios({\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        url: proxyurl + 'https://fool-me-thrice.appspot.com/api/v1/cards',\r\n        cache: false,\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Access-Control-Allow-Origin': '*'\r\n          }\r\n    }).then(response => {\r\n        return response.data;\r\n    })\r\n\r\n    return req;\r\n}\r\n\r\nfunction updateScore(data) {\r\n    let token = sessionStorage.getItem('token');\r\n\r\n    let req = axios({\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        data: data,\r\n        url: proxyurl + 'https://fool-me-thrice.appspot.com/api/v1/update_score',\r\n        cache: false,\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Access-Control-Allow-Origin': '*'\r\n          }\r\n    }).then(response => {\r\n        return response.data;\r\n    })\r\n\r\n    return req;\r\n}\r\n\r\nfunction createCard(request) {\r\n  \r\n    let token = sessionStorage.getItem('token');\r\n\r\n    let req = axios({\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        data: request,\r\n        url: proxyurl + 'https://fool-me-thrice.appspot.com/api/v1/create_card',\r\n        cache: false,\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Access-Control-Allow-Origin': '*'\r\n          }\r\n    }).then(response => {\r\n        return response;\r\n    })\r\n\r\n    return req;  \r\n}\r\n\r\nfunction getStats() {\r\n  \r\n    let token = sessionStorage.getItem('token');\r\n\r\n    let req = axios({\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        url: proxyurl + 'https://fool-me-thrice.appspot.com/api/v1/statistics',\r\n        cache: false,\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Access-Control-Allow-Origin': '*'\r\n          }\r\n    }).then(response => {\r\n        return response.data;\r\n    })\r\n\r\n    return req;  \r\n}\r\n\r\nfunction updateTopics(topics) {\r\n\r\n    let token = sessionStorage.getItem('token');\r\n\r\n    let req = axios({\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        data: topics,\r\n        url: proxyurl + 'https://fool-me-thrice.appspot.com/api/v1/update_user_topic',\r\n        cache: false,\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Access-Control-Allow-Origin': '*'\r\n          }\r\n    }).then(response => {\r\n        return response;\r\n    })\r\n\r\n    return req;\r\n}\r\n\r\nexport {\r\n        authenticate, \r\n        fetchTopics, \r\n        updateTopics, \r\n        getCards, \r\n        createCard,\r\n        getStats,\r\n        createUser,\r\n        updateScore, \r\n        getKeywords};","import React from 'react';\r\nimport {authenticate, createUser} from '../actions/api.js';\r\nimport {withRouter} from 'react-router';\r\n\r\nimport '../App.css';\r\n\r\nclass LoginPageComponent extends React.Component {\r\n  constructor() {\r\n      super();\r\n      this.state = {\r\n          email: '',\r\n          password: ''\r\n      };\r\n  }\r\n\r\n  handleUsernameChange = (email) => {\r\n      this.setState({...this.state, email: email});\r\n  }\r\n\r\n  handlePasswordChange = (password) => {\r\n      this.setState({...this.state, password: password});\r\n  }\r\n\r\n  handleSubmit() {\r\n    authenticate(this.state)\r\n        .then(res => {\r\n          if (res.data.topics.length) {\r\n            this.props.history.push('/read');\r\n          } else {\r\n            this.props.history.push('/select');\r\n          }\r\n        });\r\n  }\r\n\r\n  handleSignUp = () => {\r\n    createUser(this.state)\r\n        .then(res => {\r\n          if (res && res.message) {\r\n            window.location.reload();\r\n          }\r\n        });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"login-card\">\r\n            <div className=\"login-card-content\">\r\n                <h1 className=\"app-name\">Fool Me Thrice</h1>\r\n                <div className=\"login-form\">\r\n                    <input className=\"form-control\" onChange={(e) => this.handleUsernameChange(e.target.value)} type=\"text\" placeholder=\"someone@example.com\"></input>\r\n                    <input className=\"form-control\" onChange={(e) => this.handlePasswordChange(e.target.value)} type=\"password\" placeholder=\"password123\"></input>\r\n                </div>\r\n                <div className=\"mt-2 mb-2 ml-auto mr-auto\">\r\n                    <button onClick={() => this.handleSubmit()} className=\"login-button button btn-primary\">Login</button>\r\n                </div>\r\n                <div className=\"mt-2 mb-2 ml-auto mr-auto\">\r\n                    <button onClick={() => this.handleSignUp()} className=\"signup-button button btn-primary\">Sign Up</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default (withRouter)(LoginPageComponent);","import React from 'react';\r\nimport {withRouter} from 'react-router';\r\nimport Chips from 'react-chips';\r\n\r\nimport { fetchTopics, updateTopics } from '../actions/api';\r\n\r\nclass SelectPageComponent extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        if(!(sessionStorage.getItem('token'))) {\r\n            this.props.history.push('/');\r\n        }\r\n\r\n        this.state = {\r\n            chips: [],\r\n            chipset: [],\r\n\r\n        };\r\n\r\n        // Call Fetch Topics\r\n        fetchTopics()\r\n            .then(response => this.setState({ ...this.state, chipset: response }));\r\n    }\r\n\r\n    onChange = chips => {\r\n        this.setState({ chips });\r\n    }\r\n\r\n    handleSubmit() {\r\n        let selection = [];\r\n        selection = this.state.chipset.filter(x => this.state.chips.indexOf(x.name) > -1);\r\n        updateTopics({topic_ids: selection.map(x => x.id)})\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    this.props.history.push('/read');\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"login-card\">\r\n                    <div className=\"login-card-content\">\r\n                        <h1 className=\"app-name\">The Daily Fool</h1>\r\n                        <div className=\"login-form\">\r\n                            <h5 className=\"mb-5 select-interests\">Select your Interests</h5>\r\n                            <Chips\r\n                                value={this.state.chips}\r\n                                onChange={this.onChange}\r\n                                suggestions={this.state.chipset.map(x => x.name)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mt-4 mb-4 ml-auto mr-auto\">\r\n                            <button onClick={() => this.handleSubmit()} className=\"login-button button btn-primary\">Continue</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default (withRouter)(SelectPageComponent);","import React from 'react';\r\nimport Cards, { Card } from 'react-swipe-card';\r\nimport Lottie from 'react-lottie'\r\nimport correctAnimation from '../assets/lottie-files/433-checked-done.json';\r\nimport incorrectAnimation from '../assets/lottie-files/4386-connection-error.json';\r\n\r\nimport { getCards, updateScore } from '../actions/api';\r\nimport { withRouter } from 'react-router';\r\n\r\n// Logos\r\nimport DashboardLogo from '../assets/dashboard.svg';\r\nimport ReadBlackLogo from '../assets/read-black.svg';\r\nimport WriteLogo from '../assets/write.svg';\r\n\r\nimport '../App.css';\r\n\r\nclass ReadPageComponent extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    if (!(sessionStorage.getItem('token'))) {\r\n      this.props.history.push('/');\r\n    }\r\n\r\n    this.state = {\r\n      isSwiped: false,\r\n      cards: []\r\n    }\r\n\r\n    getCards()\r\n      .then(response => {\r\n        if (response.length === 0) {\r\n          let endcard =\r\n            [{\r\n              id: -3,\r\n              description: 'Come back again to check new cards!',\r\n              upvotes: ''\r\n            }];\r\n          this.setState({ ...this.state, cards: endcard });\r\n        } else {\r\n          this.setState({ ...this.state, cards: response })\r\n        }\r\n      });\r\n  }\r\n\r\n  // Navigate to Write\r\n  navigateToWrite() {\r\n    this.props.history.push('/write');\r\n  }\r\n\r\n  // Navigate to Dashboard\r\n  navigateToDashboard() {\r\n    this.props.history.push('/dashboard');\r\n  }\r\n\r\n  // Handle the swipe action\r\n  handleSwipe(dir, card, position) {\r\n    \r\n    if (dir === 'end') {\r\n      let endcard =\r\n      {\r\n        id: -3,\r\n        description: 'Come back again to check new cards!',\r\n        upvotes: ''\r\n      };\r\n      this.setState({ ...this.state, cards: this.state.cards.push(endcard) });\r\n    } else if ((card.id > 0) && (dir === card.fake)) {\r\n      let error_card = {\r\n        id: -2,\r\n        description: 'You got fooled by the propaganda machine!',\r\n        upvotes: '',\r\n      };\r\n\r\n      let body = {\r\n        card_id: card.id,\r\n        answer: dir\r\n      }\r\n\r\n      updateScore(body)\r\n        .then(response => response);\r\n\r\n      let temp = this.state.cards;\r\n      temp.splice(position + 1, 0, error_card);\r\n\r\n      this.setState({ ...this.state, cards: temp });\r\n\r\n    } else if ((card.id > 0) && (dir !== card.fake)) {\r\n      let positive_card = {\r\n        id: -3,\r\n        description: \"You're right! What a player!\",\r\n        upvotes: ''\r\n      };\r\n\r\n      let temp = this.state.cards;\r\n      temp.splice(position + 1, 0, positive_card);\r\n\r\n      this.setState({ ...this.state, cards: temp });\r\n\r\n      let body = {\r\n        card_id: card.id,\r\n        answer: dir\r\n      }\r\n\r\n      updateScore(body)\r\n        .then(response => response);\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const correctAnimationOptions = {\r\n      loop: false,\r\n      autoplay: true, \r\n      animationData: correctAnimation,\r\n      rendererSettings: {\r\n        preserveAspectRatio: 'xMidYMid slice'\r\n      }\r\n    };\r\n\r\n    const incorrectAnimationOptions = {\r\n      loop: false,\r\n      autoplay: true, \r\n      animationData: incorrectAnimation,\r\n      rendererSettings: {\r\n        preserveAspectRatio: 'xMidYMid slice'\r\n      }     \r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.isSwiped === false &&\r\n          <Cards className='master-root'>\r\n            {this.state.cards.map((x, index) =>\r\n                <Card\r\n                  key={x.id}\r\n                  onSwipeLeft={(e) => this.handleSwipe(false, x, index)}\r\n                  onSwipeRight={(e) => this.handleSwipe(true, x, index)}\r\n                >\r\n                  {x.id > 0 &&\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header\">\r\n                        <div className=\"points\">\r\n                          <i className=\"material-icons\">favorite</i>\r\n                          <div className=\"points-text\">{x.upvotes}</div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <p className=\"content-styles\">{x.description}</p>\r\n                        <div className=\"share-row\">\r\n                          <i className=\"material-icons share-icon\">share</i>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"my-card-footer\">\r\n                        <div className=\"app-icons-row\">\r\n                          <div className=\"col-4\">\r\n                            <img width=\"40\" height=\"40\" src={ReadBlackLogo} alt=\"Read Logo\" />\r\n                          </div>\r\n                          <div onClick={(e) => this.navigateToDashboard()} className=\"col-4\">\r\n                            <img width=\"40\" height=\"40\" src={DashboardLogo} alt=\"Dashboard Logo\" />\r\n                          </div>\r\n                          <div onClick={(e) => this.navigateToWrite()} className=\"col-4\">\r\n                            <img width=\"40\" height=\"40\" src={WriteLogo} alt=\"Write Logo\" />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  }\r\n                  {x.id === -3 &&                     \r\n                    <div>\r\n                      <div className=\"card-header\"></div>\r\n                      <div className=\"card-body-anim\">\r\n                        <Lottie options={correctAnimationOptions}\r\n                          height={300}\r\n                          width={300}\r\n                        /> \r\n                        <p className=\"content-styles-anim\">{x.description}</p>\r\n                      </div>\r\n                      <div className=\"my-card-footer\">\r\n                        <div className=\"app-icons-row\">\r\n                          <div className=\"col-4\">\r\n                            <img width=\"40\" height=\"40\" src={ReadBlackLogo} alt=\"Read Logo\" />\r\n                          </div>\r\n                          <div onClick={(e) => this.navigateToDashboard()} className=\"col-4\">\r\n                            <img width=\"40\" height=\"40\" src={DashboardLogo} alt=\"Dashboard Logo\" />\r\n                          </div>\r\n                          <div onClick={(e) => this.navigateToWrite()} className=\"col-4\">\r\n                            <img width=\"40\" height=\"40\" src={WriteLogo} alt=\"Write Logo\" />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  }\r\n                  {x.id === -2 &&                     \r\n                    <div>\r\n                      <div className=\"card-header\"></div>\r\n                      <div className=\"card-body-anim\">\r\n                        <Lottie \r\n                          options={incorrectAnimationOptions}\r\n                          height={300}\r\n                          width={300}\r\n                        /> \r\n                        <p className=\"content-styles-anim\">{x.description}</p>\r\n                      </div>\r\n                      <div className=\"my-card-footer\">\r\n                        <div className=\"app-icons-row\">\r\n                          <div className=\"col-4\">\r\n                            <img width=\"40\" height=\"40\" src={ReadBlackLogo} alt=\"Read Logo\" />\r\n                          </div>\r\n                          <div className=\"col-4\">\r\n                            <img width=\"40\" height=\"40\" src={DashboardLogo} alt=\"Dashboard Logo\" />\r\n                          </div>\r\n                          <div onClick={(e) => this.navigateToWrite()} className=\"col-4\">\r\n                            <img width=\"40\" height=\"40\" src={WriteLogo} alt=\"Write Logo\" />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  }\r\n                </Card>\r\n            )}\r\n          </Cards>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default (withRouter)(ReadPageComponent);","import React from 'react';\r\nimport Cards, { Card } from 'react-swipe-card'\r\n\r\nimport { getStats } from '../actions/api';\r\nimport { withRouter } from 'react-router';\r\n\r\n// Logos\r\nimport DashboardBlackLogo from '../assets/dashboard-black.svg';\r\nimport ReadLogo from '../assets/read.svg';\r\nimport WriteLogo from '../assets/write.svg';\r\n\r\nimport '../App.css';\r\n\r\nclass DashboardPageComponent extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      dummy: [1],\r\n      top_cards: [],\r\n      top_performers: []\r\n    }\r\n\r\n    if (!(sessionStorage.getItem('token'))) {\r\n      this.props.history.push('/');\r\n    }\r\n\r\n    getStats()\r\n      .then(response => {\r\n        this.setState({\r\n          ...this.state,\r\n          top_cards: response.top_cards.slice(0, 3),\r\n          top_performers: response.top_performers.slice(0, 3)\r\n        })\r\n      })\r\n\r\n  }\r\n\r\n  // Navigate to Read\r\n  navigateToRead() {\r\n    this.props.history.push('/read');\r\n  }\r\n\r\n  // Navigate to Read\r\n  navigateToWrite() {\r\n      this.props.history.push('/write');\r\n  }\r\n\r\n  renderTopCards() {\r\n    return this.state.top_cards.map((item, index) => {\r\n      return (\r\n          <div key={index} className=\"row m-0 p-1\">\r\n            <div className=\"col-2 number-col-db\">{item.upvotes}</div>\r\n            <div className=\"col-10 text-col-db\">{item.description}</div>\r\n          </div>\r\n        )\r\n    })\r\n  }\r\n\r\n  renderTopPerformers() {\r\n    return this.state.top_performers.map((user, index) => {\r\n      return (\r\n          <div key={index} className=\"row m-0 p-1\">\r\n            <div className=\"col-2 number-col-db\">{user.sum}</div>\r\n            <div className=\"col-10 text-col-db\">{user.email}</div>\r\n          </div>\r\n        )\r\n    })   \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Cards className='master-root'>\r\n          {this.state.dummy.map(x =>\r\n            <Card\r\n              key={x}\r\n            >\r\n              <div className=\"dashboard-card-wrapper\">\r\n                <h5 className=\"card-header\">Statistics</h5>\r\n                <div className=\"card-body-dashboard p-2\">\r\n                  <div className=\"row m-0 p-1 row-header-db\">\r\n                    Top Cards\r\n                  </div>\r\n                  {this.renderTopCards()}\r\n                  <hr></hr>\r\n                  <div className=\"row m-0 p-1 row-header-db\">\r\n                    Top Performers\r\n                  </div>\r\n                  {this.renderTopPerformers()}\r\n                </div>\r\n                <div className=\"my-card-footer\">\r\n                  <div className=\"app-icons-row\">\r\n                    <div onClick={(e) => this.navigateToRead()} className=\"col-4\">\r\n                      <img width=\"40\" height=\"40\" src={ReadLogo} alt=\"Read Logo\" />\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                      <img width=\"40\" height=\"40\" src={DashboardBlackLogo} alt=\"Dashboard Logo\" />\r\n                    </div>\r\n                    <div onClick={(e) => this.navigateToWrite()} className=\"col-4\">\r\n                      <img width=\"40\" height=\"40\" src={WriteLogo} alt=\"Write Logo\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          )}\r\n        </Cards>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default (withRouter)(DashboardPageComponent);","import React from 'react';\r\nimport Cards, { Card } from 'react-swipe-card'\r\n\r\nimport { getKeywords, createCard } from '../actions/api';\r\nimport { withRouter } from 'react-router';\r\n\r\n// Logos\r\nimport DashboardLogo from '../assets/dashboard.svg';\r\nimport ReadLogo from '../assets/read.svg';\r\nimport WriteBlackLogo from '../assets/write-black.svg';\r\n\r\nimport '../App.css';\r\n\r\nclass WritePageComponent extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      dummy: [1],\r\n      subjects: [],\r\n      verbs: [],\r\n      victims: [],\r\n      selectedWords: [],\r\n      row0: ['', '', ''],\r\n      row1: ['', '', ''],\r\n      row2: ['', '', '']\r\n    }\r\n\r\n    if (!(sessionStorage.getItem('token'))) {\r\n      this.props.history.push('/');\r\n    }\r\n\r\n    getKeywords()\r\n      .then(res => {\r\n        this.setState({\r\n          ...this.state,\r\n          topic_id: res.topic.id,\r\n          subjects: res.subjects.map(x => x.name),\r\n          verbs: res.verbs.map(x => x.name),\r\n          victims: res.victims.map(x => x.name)\r\n        })\r\n      });\r\n  }\r\n\r\n  // Navigate to Read\r\n  navigateToRead() {\r\n    this.props.history.push('/read');\r\n  }\r\n\r\n  // Navigate to Dashboard\r\n  navigateToDashboard() {\r\n    this.props.history.push('/dashboard');\r\n  }\r\n\r\n  handleButtonClick = (word) => {\r\n    let x = this.state.selectedWords;\r\n    if (x.length < 3) {\r\n      x.push(word);\r\n      this.setState({ ...this.state, selectedWords: x });\r\n    }\r\n    this.renderSentenceConstruct();\r\n  }\r\n\r\n  handleRemoveWord = (word) => {\r\n    let x = this.state.selectedWords;\r\n    x = x.filter(item => item !== word)\r\n    this.setState({ ...this.state, selectedWords: x });\r\n    this.renderSentenceConstruct();\r\n  }\r\n\r\n  handleInputChange = (index, position, input) => {\r\n\r\n    let x = this.state[`row${index}`];\r\n    x[position] = input;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      [`row${index}`]: x\r\n    })\r\n  }\r\n\r\n  resetStates = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      selectedWords: [],\r\n      row0: ['', '', ''],\r\n      row1: ['', '', ''],\r\n      row2: ['', '', '']\r\n    })\r\n  }\r\n\r\n  createFakeCard = () => {\r\n\r\n    // Get all selected words and interpolate them\r\n    this.state.selectedWords.forEach((word, index) => {\r\n      let x = this.state[`row${index}`];\r\n      x[1] = word;\r\n      this.setState({\r\n        ...this.state,\r\n        [`row${index}`]: x\r\n      })\r\n    });\r\n\r\n    // Concatenate all words and build the string\r\n    let x = this.state.row0.concat(this.state.row1, this.state.row2);\r\n    x = x.join(' ');\r\n\r\n    let body = {\r\n      topic_id: this.state.topic_id,\r\n      description: x,\r\n      fake: true\r\n    }\r\n\r\n    createCard(body)\r\n      .then(res => this.resetStates());\r\n\r\n  }\r\n\r\n  renderSentenceConstruct() {\r\n    return (\r\n      this.state.selectedWords.map((word, index) => {\r\n        return (\r\n          <div  key={index}>\r\n            <div className=\"row inputs-row\">\r\n              <input value={this.state[`row${index}[0]`]} onChange={(e) => this.handleInputChange(index, 0, e.target.value)} className=\"form-control write-form-control\" type=\"text\"></input>\r\n              <button onClick={() => this.handleRemoveWord(word)} className=\"btn btn-dark selector-button\">{word}</button>\r\n              <input value={this.state[`row${index}[2]`]} onChange={(e) => this.handleInputChange(index, 2, e.target.value)} className=\"form-control write-form-control\" type=\"text\"></input>\r\n            </div>\r\n            {index > 1 &&\r\n              <div className=\"row create-btn-row m-0\">\r\n                <button onClick={() => this.createFakeCard()} className=\"btn create-btn btn-success\">Create</button>\r\n              </div>}\r\n          </div>\r\n        )\r\n      })\r\n    )\r\n  }\r\n\r\n  renderKeywords() {\r\n    let words = [];\r\n    words = words.concat(this.state.subjects, this.state.verbs, this.state.victims);\r\n    return (\r\n      words.map((s, index) => <div key={index} className=\"col-6 selector-btn-col\"><button type=\"button\" className=\"btn btn-dark selector-button\" onClick={() => this.handleButtonClick(s)}>{s}</button></div>)\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Cards className='master-root'>\r\n          {this.state.dummy.map(x =>\r\n            <Card\r\n              key={x}\r\n            >\r\n              <div className=\"write-card-wrapper\">\r\n                <h5 className=\"card-header\">Construct your card</h5>\r\n                <div className=\"card-body-write\">\r\n                  <div className=\"sentence-construct-container\">\r\n                    {this.renderSentenceConstruct()}\r\n                  </div>\r\n                  <div className=\"keyword-select-container\">\r\n                    <div className=\"row\">\r\n                      {this.renderKeywords()}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"my-card-footer\">\r\n                  <div className=\"app-icons-row\">\r\n                    <div onClick={(e) => this.navigateToRead()} className=\"col-4\">\r\n                      <img width=\"40\" height=\"40\" src={ReadLogo} alt=\"Read Logo\" />\r\n                    </div>\r\n                    <div onClick={(e) => this.navigateToDashboard()} className=\"col-4\">\r\n                      <img width=\"40\" height=\"40\" src={DashboardLogo} alt=\"Dashboard Logo\" />\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                      <img width=\"40\" height=\"40\" src={WriteBlackLogo} alt=\"Write Logo\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          )}\r\n        </Cards>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default (withRouter)(WritePageComponent);","import React from 'react';\r\n\r\nimport {\r\n  HashRouter as Router,\r\n  Route\r\n} from 'react-router-dom'\r\n\r\nimport './App.css';\r\nimport LoginPageComponent from './components/LoginPage';\r\nimport SelectPageComponent from './components/SelectPage';\r\nimport ReadPageComponent from './components/ReadPage';\r\nimport DashboardPageComponent from './components/DashboardPage';\r\nimport WritePageComponent from './components/WritePage';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div id=\"root\">\r\n          <Route exact path=\"/\" component={LoginPageComponent} />\r\n          <Route path=\"/read\" exact component={ReadPageComponent} />\r\n          <Route path=\"/write\" exact component={WritePageComponent} />\r\n          <Route path=\"/dashboard\" exact component={DashboardPageComponent} />\r\n          <Route path=\"/select\" exact component={SelectPageComponent} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/dashboard.82dc68ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/write.4ef89b7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/read.fbf7eb0c.svg\";"],"sourceRoot":""}